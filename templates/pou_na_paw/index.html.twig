{% extends 'base.html.twig' %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('/css/homepage.css') }}">
{% endblock %}

{% block body %}

    <nav class="navbar navbar-expand-sm bg-primary navbar-dark">
        <ul class="navbar-nav">
            <div class="navbar-header">
                <a class="navbar-brand" href="{{ app.request.getBaseURL() }}/">PooBus</a>
            </div>
            <li class="nav-item active">
                <a class="nav-link" href="{{ app.request.getBaseURL() }}/">Homepage</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="{{ app.request.getBaseURL() }}/about-us">About Us</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="{{ app.request.getBaseURL() }}/reviews">What Others Say</a>
            </li>
        </ul>
    </nav>

    <div class="example-wrapper">
        <h1>Welcome to PouBus!</h1></br>


        <form class="locations" action="locations.php" method="post">
            <div class="form-group">
                <label>Starting Point</label>
                <input id="autocomplete" placeholder="Enter your address" onFocus="geolocate()" type="text"/>
                <input type="text" class="form-control"name="start" placeholder="Give Starting Point"/>
                <script>
                    // This example displays an address form, using the autocomplete feature
                    // of the Google Places API to help users fill in the information.

                    // This example requires the Places library. Include the libraries=places
                    // parameter when you first load the API. For example:
                    // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

                    var placeSearch, autocomplete;
                    var componentForm = {
                        street_number: 'short_name',
                        route: 'long_name',
                        locality: 'long_name',
                        administrative_area_level_1: 'short_name',
                        country: 'long_name',
                        postal_code: 'short_name'
                    };

                    function initAutocomplete() {
                        // Create the autocomplete object, restricting the search to geographical
                        // location types.
                        autocomplete = new google.maps.places.Autocomplete(
                            /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
                            {types: ['geocode']});

                        // When the user selects an address from the dropdown, populate the address
                        // fields in the form.
                        autocomplete.addListener('place_changed', fillInAddress);
                    }

                    function fillInAddress() {
                        // Get the place details from the autocomplete object.
                        var place = autocomplete.getPlace();

                        for (var component in componentForm) {
                            document.getElementById(component).value = '';
                            document.getElementById(component).disabled = false;
                        }

                        // Get each component of the address from the place details
                        // and fill the corresponding field on the form.
                        for (var i = 0; i < place.address_components.length; i++) {
                            var addressType = place.address_components[i].types[0];
                            if (componentForm[addressType]) {
                                var val = place.address_components[i][componentForm[addressType]];
                                document.getElementById(addressType).value = val;
                            }
                        }
                    }

                    // Bias the autocomplete object to the user's geographical location,
                    // as supplied by the browser's 'navigator.geolocation' object.
                    function geolocate() {
                        if (navigator.geolocation) {
                            navigator.geolocation.getCurrentPosition(function(position) {
                                var geolocation = {
                                    lat: position.coords.latitude,
                                    lng: position.coords.longitude
                                };
                                var circle = new google.maps.Circle({
                                    center: geolocation,
                                    radius: position.coords.accuracy
                                });
                                autocomplete.setBounds(circle.getBounds());
                            });
                        }
                    }
                </script>
                <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBgKynouiPqV-ZGv_3s6FZSwF-Inpyzl3Q&libraries=places&callback=initAutocomplete"
                        async defer></script>

            </div>
            <div class="form-group">
                <label>Destination</label>
                <input type="text" class="form-control"name="start" placeholder="Give Destination">
            </div>
            <button type="submit" class="btn btn-default btn-primary">Submit</button>
        </form>
    </div>
{% endblock %}
